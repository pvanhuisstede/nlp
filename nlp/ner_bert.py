# AUTOGENERATED! DO NOT EDIT! File to edit: ../05_ner_bert.ipynb.

# %% auto 0
__all__ = ['df', 'labels', 'unique_labels', 'labels_to_ids', 'ids_to_labels']

# %% ../05_ner_bert.ipynb 2
# Declare imports here
import pandas as pd
import torch 
import numpy as np
from transformers import BertTokenizerFast, BertForTokenClassification
from torch.utils.data import DataLoader
from tqdm import tqdm
from transformers import BertTokenizerFast

# %% ../05_ner_bert.ipynb 4
df = pd.read_csv('/home/peter/Documents/data/nlp/ner.csv')
df.head()

# %% ../05_ner_bert.ipynb 6
# Split labels based on whitespace and turn them into a list
labels = [i.split() for i in df['labels'].values.tolist()]

# Check how many unique labels there are in our dataset
unique_labels = set()
for lb in labels: [unique_labels.add(i) for i in lb if i not in unique_labels]

# Now we can map each label unto its ID representation and vice versa:
labels_to_ids = {k: v for v, k in enumerate(sorted(unique_labels))}
ids_to_labels = {v: k for v, k in enumerate(sorted(unique_labels))}

